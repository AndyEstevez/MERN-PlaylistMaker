[{"C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\index.js":"1","C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\App.js":"2","C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\reportWebVitals.js":"3","C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\navbar.js":"4","C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\navbar-items.js":"5","C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\home-page.js":"6","C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\sidebar-nav.js":"7","C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\pro-sidebar.js":"8","C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\create-playlist.js":"9","C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\view-all-playlists.js":"10","C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\search-page.js":"11","C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\artist-page.js":"12","C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\tracks-page.js":"13","C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\playlist-page.js":"14"},{"size":478,"mtime":1612303922230,"results":"15","hashOfConfig":"16"},{"size":1142,"mtime":1612998375258,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":1574,"mtime":1612657707146,"results":"19","hashOfConfig":"16"},{"size":829,"mtime":1612477205849,"results":"20","hashOfConfig":"16"},{"size":4502,"mtime":1612891649027,"results":"21","hashOfConfig":"16"},{"size":1861,"mtime":1612480503032,"results":"22","hashOfConfig":"16"},{"size":940,"mtime":1612497398040,"results":"23","hashOfConfig":"16"},{"size":2474,"mtime":1613345024557,"results":"24","hashOfConfig":"16"},{"size":1682,"mtime":1613344969381,"results":"25","hashOfConfig":"16"},{"size":2638,"mtime":1612841778597,"results":"26","hashOfConfig":"16"},{"size":3647,"mtime":1612902100212,"results":"27","hashOfConfig":"16"},{"size":8181,"mtime":1613344995422,"results":"28","hashOfConfig":"16"},{"size":2733,"mtime":1613345013276,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"2bdjbr",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":1,"source":"58","usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\index.js",[],["62","63"],"C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\App.js",[],"C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\reportWebVitals.js",[],"C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\navbar.js",[],"C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\navbar-items.js",[],["64","65"],"C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\home-page.js",[],"C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\sidebar-nav.js",[],"C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\pro-sidebar.js",[],"C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\create-playlist.js",[],"C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\view-all-playlists.js",[],"C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\search-page.js",[],"C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\artist-page.js",[],"C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\tracks-page.js",["66","67","68"],"import React, { Component } from 'react'\r\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport Button from '@material-ui/core/Button';\r\n// import DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport axios from 'axios';\r\n\r\nexport default class TracksPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.handleOpen = this.handleOpen.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n        this.getPlaylists = this.getPlaylists.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleButton = this.handleButton.bind(this);\r\n        this.handleButton = this.handlePlaylistChange.bind(this);\r\n        this.handleAdd = this.handleAdd.bind(this);\r\n\r\n        this.state = {\r\n            tracks: [],\r\n            id: props.match.params.id,\r\n            images: '',\r\n            albumName: '',\r\n            artistName: '',\r\n            totalTracks: 0,\r\n            releaseYear: 0,\r\n            open: false,\r\n            databasePlaylists: [],\r\n            submitName: '',\r\n            submitArtist: '',\r\n            selectedPlaylist: '',\r\n            indexPlaylist: 0,\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const response = await fetch(`https://api.spotify.com/v1/albums/${this.state.id}/tracks?market=US&limit=50`, {\r\n            method: 'GET', headers: { 'Authorization': 'Bearer ' + process.env.REACT_APP_SPOTIFY_APIKEY }});\r\n\r\n        const json = await response.json();\r\n        this.setState({ tracks: json.items,});\r\n\r\n\r\n        const responseAlbumInfo = await fetch(`https://api.spotify.com/v1/albums/${this.state.id}?market=US`, {\r\n            method: 'GET', headers: { 'Authorization': 'Bearer ' + process.env.REACT_APP_SPOTIFY_APIKEY }});\r\n        const jsonAlbum = await responseAlbumInfo.json();\r\n        // console.log(jsonAlbum)\r\n        this.setState({ images: jsonAlbum.images[1].url, albumName: jsonAlbum.name, \r\n            artistName: jsonAlbum.artists[0].name, totalTracks: jsonAlbum.total_tracks, releaseYear: jsonAlbum.release_date.substring(0, 4) });\r\n    }\r\n\r\n    handleOpen = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({ open: true, submitName: e.target.value });\r\n        console.log(e.target.value)\r\n        this.getPlaylists();\r\n    }    \r\n    handleButton(name) {\r\n        this.setState({submitName: name, open: true })\r\n        console.log(this.state.submitName)\r\n        this.getPlaylists();\r\n\r\n    }\r\n    handleClose() {\r\n        this.setState({ open: false });\r\n    }\r\n    handlePlaylistChange = (event) => {\r\n        console.log(this.state.submitName)\r\n        this.setState({ selectedPlaylist: event.target.value, \r\n            indexPlaylist: this.state.databasePlaylists.\r\n                findIndex(x => x.playlistName === event.target.value) })\r\n        console.log(this.state.databasePlaylists.findIndex(x => x.playlistName === event.target.value))\r\n    }\r\n    handleAdd(e){\r\n        e.preventDefault();\r\n        const song = {\r\n            name: this.state.submitName,\r\n            artist: this.state.artistName,\r\n            album: this.state.albumName\r\n        }\r\n        axios.post('/playlists/update/' + this.state.databasePlaylists[this.state.indexPlaylist]._id, song)\r\n            .then(res => console.log(res.data))\r\n        console.log(song)\r\n        this.setState({ open: false });\r\n\r\n    }\r\n    handleSubmit() {\r\n\r\n        const song = {\r\n            name: this.state.submitName,\r\n            artist: this.state.artistName,\r\n            album: this.state.albumName\r\n        }\r\n\r\n        axios.post('/playlists/update/' + this.state.databasePlaylists[this.state.indexPlaylist]._id, song)\r\n            .then(res => console.log(res.data))\r\n        console.log(song)\r\n\r\n        \r\n    }\r\n  \r\n    async getPlaylists() {\r\n        await axios.get('/playlists')\r\n            .then(response => {\r\n                this.setState({ databasePlaylists: response.data })\r\n            })\r\n            .catch((error) => console.log('Error: ' + error));\r\n\r\n        console.log(this.state.databasePlaylists)\r\n    }\r\n    render() {\r\n   \r\n        // console.log(this.state.tracks)\r\n        return (\r\n            <div style={{width: \"50%\", margin: \"auto\", paddingBottom: '100px'}}>\r\n                <div style={{padding: '25px 0px'}}>\r\n                    <img style={{ display: 'block', marginLeft: 'auto', marginRight: 'auto', width: '50%' }} src={this.state.images}/>\r\n                </div>\r\n                \r\n                <div style={{width: \"50%\", margin: \"auto\", textAlign: 'center', padding: '55px 0px'}}>\r\n                    <h3>{this.state.albumName}</h3>\r\n                    <h6>{this.state.artistName}</h6>\r\n                    {this.state.totalTracks > 1 ? <h6>{this.state.totalTracks} songs</h6> : <h6>{this.state.totalTracks} song</h6>}\r\n                    <h6>{this.state.releaseYear}</h6>\r\n                </div>\r\n               \r\n                <table className=\"table center\" style={{textAlign: \"center\",}} >\r\n                    <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <td style={{fontWeight: '700', fontSize: '1.25em'}}>#</td>\r\n                            <td style={{fontWeight: '700', fontSize: '1.25em'}}>Title</td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.tracks.map(index => {\r\n                            return(\r\n                                <tr key={index.name}>\r\n                                    <td style={{fontSize: '1.1em'}}>{index.track_number}</td>\r\n                                    <td style={{fontSize: '1.1em'}}>{index.name}</td>\r\n                                    <td>\r\n                                        <IconButton onClick={this.handleOpen} value={index.name}><LibraryAddIcon style={{color: '#1DB954'}}/></IconButton>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n                <Dialog fullWidth={true} open={this.state.open} onClose={this.handleClose}>\r\n                    <DialogTitle>Add to playlist</DialogTitle>\r\n                    <DialogContentText>Add to which playlist</DialogContentText>\r\n                    <form style={{margin: 'auto', width: 'fit-content', display: 'flex', flexDirection: 'column'}}>\r\n                        <FormControl style={{minWidth: '120'}}>\r\n                            <InputLabel>Playlists</InputLabel>\r\n                                <Select autoFocus value={this.state.selectedPlaylist} onChange={this.handlePlaylistChange}>\r\n                                {this.state.databasePlaylists.map(index => {\r\n                                        return(\r\n                                            <MenuItem value={index.playlistName} key={index._id}>{index.playlistName}</MenuItem>\r\n                                        )\r\n                                    })}\r\n                                </Select>\r\n                        </FormControl>\r\n                    </form>\r\n                    <DialogActions>\r\n                        <Button onClick={this.handleClose} color=\"primary\">\r\n                            Close\r\n                        </Button>\r\n                        <Button onClick={this.handleAdd} color=\"primary\" type=\"submit\">\r\n                            Add\r\n                        </Button>\r\n                    </DialogActions>\r\n                </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","C:\\Users\\andye\\OneDrive\\Desktop\\mern-playlist-tracker\\src\\components\\playlist-page.js",[],["69","70"],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"71","replacedBy":"75"},{"ruleId":"73","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":11,"column":8,"nodeType":"79","messageId":"80","endLine":11,"endColumn":24},{"ruleId":"81","severity":1,"message":"82","line":81,"column":56,"nodeType":"83","messageId":"84","endLine":81,"endColumn":57,"fix":"85"},{"ruleId":"86","severity":1,"message":"87","line":128,"column":21,"nodeType":"88","endLine":128,"endColumn":135},{"ruleId":"71","replacedBy":"89"},{"ruleId":"73","replacedBy":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],["91"],["92"],"no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"93","text":"94"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["91"],["92"],"no-global-assign","no-unsafe-negation",[3333,3352],"\r\n                ."]